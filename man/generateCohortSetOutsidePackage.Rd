% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CohortGeneratorCohortConstruction.R
\name{generateCohortSetOutsidePackage}
\alias{generateCohortSetOutsidePackage}
\title{Generate a set of cohorts}
\usage{
generateCohortSetOutsidePackage(
  connectionDetails = NULL,
  connection = NULL,
  cdmDatabaseSchema,
  tempEmulationSchema = getOption("sqlRenderTempEmulationSchema"),
  cohortDatabaseSchema = cdmDatabaseSchema,
  cohortTableNames = getCohortTableNames(),
  cohortDefinitionSet = NULL,
  stopOnError = TRUE,
  incremental = FALSE,
  incrementalFolder = NULL
)
}
\arguments{
\item{connectionDetails}{An object of type \code{connectionDetails} as created using the
\code{\link[DatabaseConnector]{createConnectionDetails}} function in the
DatabaseConnector package. Can be left NULL if \code{connection} is
provided.}

\item{connection}{An object of type \code{connection} as created using the
\code{\link[DatabaseConnector]{connect}} function in the
DatabaseConnector package. Can be left NULL if \code{connectionDetails}
is provided, in which case a new connection will be opened at the start
of the function, and closed when the function finishes.}

\item{cdmDatabaseSchema}{Schema name where your patient-level data in OMOP CDM format resides.
Note that for SQL Server, this should include both the database and
schema name, for example 'cdm_data.dbo'.}

\item{tempEmulationSchema}{Some database platforms like Oracle and Impala do not truly support temp tables. To emulate temp 
tables, provide a schema with write privileges where temp tables can be created.}

\item{cohortDatabaseSchema}{Schema name where your cohort table resides. Note that for SQL Server,
this should include both the database and schema name, for example
'scratch.dbo'.}

\item{stopOnError}{If an error happens while generating one of the cohorts in the 
cohortDefinitionSet, should we stop processing the other
cohorts? The default is TRUE; when set to FALSE, failures will
be identified in the return value from this function.}

\item{incremental}{Create only cohorts that haven't been created before?}

\item{incrementalFolder}{If \code{incremental = TRUE}, specify a folder where records are
kept of which definition has been executed.}

\item{packageName}{The name of the package containing the cohort definitions. Can be left NULL if 
\code{baseUrl} and \code{cohortSetReference} have been specified.}

\item{cohortToCreateFile}{The location of the cohortToCreate file within the package. Is ignored if 
\code{baseUrl} and \code{cohortSetReference} have been specified. The
cohortToCreateFile must be .csv file that is expected to be read into 
a dataframe object identical to requirements for \code{cohortSetReference} argument. 
This csv file is expected to be encoded in either ASCII or UTF-8, if not, an 
error message will be displayed and process stopped.}

\item{baseUrl}{The base URL for the WebApi instance, for example:
"http://server.org:80/WebAPI". Can be left NULL if 
\code{packageName} and \code{cohortToCreateFile} have been specified.}

\item{cohortSetReference}{A data frame with four columns, as described in the details. Can be left NULL if 
\code{packageName} and \code{cohortToCreateFile} have been specified.}

\item{cohortTable}{Name of the cohort table.}
}
\value{
A data.frame consisting of the following columns:
\describe{
   \item{cohortId}{The unique integer identifier of the cohort} 
   \item{cohortName}{The cohort's name}
   \item{generationStatus}{The status of the generation task which may be one of the following: 
          \describe{
               \item{COMPLETE}{The generation completed successfully}
               \item{FAILED}{The generation failed (see logs for details)}
               \item{SKIPPED}{If using incremental == 'TRUE', this status indicates 
                              that the cohort's generation was skipped since it 
                              was previously completed.}
          }}
   \item{startTime}{The start time of the cohort generation. If the generationStatus == 'SKIPPED', the startTime will be NA.}
   \item{endTime}{The end time of the cohort generation. If the generationStatus == 'FAILED', the endTime will be the time of the failure. 
                  If the generationStatus == 'SKIPPED', endTime will be NA.}
   }
}
\description{
This function generates a set of cohorts in the cohort table.
}
\details{
Currently two ways of executing this function are supported, either 
(1) [Package Mode] embedded in a study package, assuming the cohort definitions are stored in that package using the \code{ROhdsiWebApi::insertCohortDefinitionSetInPackage}, or 
(2) [WebApi Mode] By using a WebApi interface to retrieve the cohort definitions.

When using this function in Package Mode: Use the \code{packageName} and \code{cohortToCreateFile} to specify
the name of the study package, and the name of the cohortToCreate file within that package, respectively

When using this function in WebApi Mode: use the \code{baseUrl} and \code{cohortSetReference} to specify how to 
connect to the WebApi, and which cohorts to fetch, respectively.

Note: if the parameters for both Package Mode and WebApi Mode are provided, then Package mode is preferred.

Currently two ways of executing this function are supported, either 
(1) [Package Mode] embedded in a study package, assuming the cohort definitions are stored in that package using the \code{ROhdsiWebApi::insertCohortDefinitionSetInPackage}, or 
(2) [WebApi Mode] By using a WebApi interface to retrieve the cohort definitions.

When using this function in Package Mode: Use the \code{packageName} and \code{cohortToCreateFile} to specify
the name of the study package, and the name of the cohortToCreate file within that package, respectively

When using this function in WebApi Mode: use the \code{baseUrl} and \code{cohortSetReference} to specify how to 
connect to the WebApi, and which cohorts to fetch, respectively.

Note: if the parameters for both Package Mode and WebApi Mode are provided, then Package mode is preferred.
}
